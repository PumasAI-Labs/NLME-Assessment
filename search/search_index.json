{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pumas-AI NLME Model Assessment Workshop","text":"<p>This workshop introduces concepts of model assessment and model selection in Pumas.</p> <p>It covers how:</p> <ul> <li>inspect models with the <code>inspect</code> function</li> <li>generate population and individual predictions with the <code>predict</code> function</li> <li>calculate model metrics with the <code>metrics_table</code> function</li> <li>plot goodness of fit (GoF) plots</li> <li>perform visual predictive checks (VPCs)</li> </ul> <p>The following Julia files are provided:</p> <ol> <li><code>00-model_fits.jl</code>: defines and fits a one- and a two-compartment IV models that will be used throughout the workshop</li> <li><code>01-inspect.jl</code>: an overview of the <code>inspect</code> function</li> <li><code>02-predict.jl</code>: covers how to use the <code>predict</code> function to do rich population and individual predictions</li> <li><code>03-metrics.jl</code>: an overview of the different model metrics available in Pumas and the <code>goodness_of_fit</code> plotting function</li> <li><code>04-vpc.jl</code>: covers how to run and plot VPCs</li> </ol> <p>Prerequisites</p> <p>We recommend users being familiar with NLME Modeling in Pumas, especially <code>Population</code>s, <code>@model</code> macro, and <code>fit</code> function.</p> <p>The formal requirements are the NLME Modeling Workshop.</p>"},{"location":"#schedule","title":"Schedule","text":"Time (HH:MM) Activity Description 00:00 Setup Download files required for the workshop 00:05 Model Fits Walkthrough and fit of the competing one- and two-compartment models in <code>00-model_fits.jl</code> 00:15 Model Inspection Showcase <code>01-inspect.jl</code> 00:25 Model Predictions Showcase <code>02-predict.jl</code> 00:35 Model Metrics Showcase <code>03-metrics.jl</code> 00:45 Visual Predictive Checks Showcase <code>04-vpc.jl</code> 00:55 Closing Remarks See if there are any questions and feedback"},{"location":"#get-in-touch","title":"Get in touch","text":"<p>If you have any suggestions or want to get in touch with our education team, please send an email to training@pumas.ai.</p>"},{"location":"#authors","title":"Authors","text":"<ul> <li>Jose Storopoli - jose@pumas.ai</li> </ul>"},{"location":"#license","title":"License","text":"<p>This content is licensed under Creative Commons Attribution-ShareAlike 4.0 International.</p> <p></p>"},{"location":"code_of_conduct/","title":"Code of Conduct for Pumas-AI NLME Model Assessment Workshop","text":"<p>At Pumas-AI we are committed to creating a friendly and respectful place for learning, teaching and contributing. All participants in our events and communications are expected to show respect and courtesy to others. To make clear what is expected, everyone participating in Pumas-AI activities is required to conform to the Code of Conduct.</p> <p>Pumas-AI is dedicated to providing a welcoming and supportive environment for all people, regardless of background or identity. As such, we do not tolerate behaviour that is disrespectful to our instructors or learners or that excludes, intimidates, or causes discomfort to others. We do not tolerate discrimination or harassment based on characteristics that include, but are not limited to, gender identity and expression, sexual orientation, disability, physical appearance, body size, citizenship, nationality, ethnic or social origin, pregnancy, familial status, veteran status, genetic information, religion or belief (or lack thereof), membership of a national minority, property, age, education, socio-economic status, technical choices, and experience level.</p>"},{"location":"code_of_conduct/#expected-behaviour","title":"Expected Behaviour","text":"<p>All participants in our events and communications are expected to show respect and courtesy to others. All interactions should be professional regardless of platform: either online or in-person. In order to foster a positive and professional learning environment we encourage the following kinds of behaviours in all Pumas-AI events and platforms:</p> <ul> <li>Use welcoming and inclusive language</li> <li>Be respectful of different viewpoints and experiences</li> <li>Gracefully accept constructive criticism</li> <li>Focus on what is best for the community</li> <li>Show courtesy and respect towards other community members</li> </ul>"},{"location":"code_of_conduct/#unacceptable-behaviour","title":"Unacceptable Behaviour","text":"<p>Examples of unacceptable behaviour by participants at any Pumas-AI event/platform include:</p> <ul> <li>written or verbal comments which have the effect of excluding people on the basis of membership of any specific group</li> <li>causing someone to fear for their safety, such as through stalking, following, or intimidation</li> <li>violent threats or language directed against another person</li> <li>the display of sexual or violent images</li> <li>unwelcome sexual attention</li> <li>nonconsensual or unwelcome physical contact</li> <li>sustained disruption of talks, events or communications</li> <li>insults or put downs</li> <li>sexist, racist, homophobic, transphobic, ableist, or exclusionary jokes</li> <li>excessive swearing</li> <li>incitement to violence, suicide, or self-harm</li> <li>continuing to initiate interaction (including photography or recording) with someone after being asked to stop</li> <li>publication of private communication without consent</li> </ul>"},{"location":"code_of_conduct/#consequences-of-unacceptable-behaviour","title":"Consequences of Unacceptable Behaviour","text":"<p>Participants who are asked to stop any inappropriate behaviour are expected to comply immediately. This applies to any Pumas-AI events and platforms, either online or in-person. If a participant engages in behaviour that violates this code of conduct, the organisers may warn the offender, ask them to leave the event or platform (without refund, if applicable), or engage with Pumas-AI representatives to investigate the Code of Conduct violation and impose appropriate sanctions.</p>"},{"location":"code_of_conduct/#get-in-touch","title":"Get in touch","text":"<p>If you have any suggestions or want to get in touch with our education team, please send an email to training@pumas.ai.</p>"},{"location":"code_of_conduct/#license","title":"License","text":"<p>This content is licensed under Creative Commons Attribution-ShareAlike 4.0 Internacional.</p> <p></p>"},{"location":"contribute/","title":"How to Contribute","text":"<p>If you want to contribute to this workshop, please open a pull request at <code>PumasAI-Labs/NLME-Assessment</code>.</p> <p>By submitting a pull request, you are in accordance that your contribution will be licensed under Creative Commons Attribution-ShareAlike 4.0 International.</p> <p>Once your pull request is approved and merged, you'll be acknowledged as one of the authors in the workshop site and GitHub repository.</p>"},{"location":"instructors/","title":"Instructor's Notes for Pumas-AI NLME Model Assessment Workshop","text":"<p>Start with the <code>00-model_fits.jl</code> script. This covers already what the <code>NLME-Model</code> workshop teaches about model definition and model fitting. There are two PK models of an IV drug infusion. The first is a 1-compartment model and the second is a 2-compartment model. Go over the model explaining the main differences between them. You'll use these models to explain how to assess and compare models in Pumas.</p> <p>Next, proceed to the <code>01-inspect.jl</code> script. This file focuses on the <code>inspect</code> function. Showcase how to use and explain all the calculations it is doing under the hood: pred, ipred, wres, ebe, icoef, dcp, and NPDE. If any user has questions about these concepts they are explained in the glossary in the reference sheet. These can also be individually retrieved using the convenience functions and their output converted to a <code>DataFrame</code>. Don't forget to show that the <code>inspect</code> function can generate NPDEs with the <code>nsim</code> keyword argument.</p> <p>Now, proceed to the <code>02-predict.jl</code> script. Here you'll explain about the <code>predict</code> function that generates the <code>_pred</code> and <code>_ipred</code> suffix columns for every variable defined in the <code>@derived</code> model block. Explain the difference between those two columns, use the glossary in the reference sheet if necessary. If the user wants to have a more dense or an altogether different time profile for the predictions than the original one in the data, the user can do that by passing an interval/vector of time values to the optional keyword argument <code>obstimes</code>. Show these to the user and focus on the <code>_pred</code> and <code>_ipred</code> columns despite that the <code>DV</code> column has <code>missing</code> values for these different time values.</p> <p>Move to the <code>03-metrics.jl</code> script. This is where all the model metrics will be explained. The first function is the <code>metrics_table</code> which needs <code>PumasUtilities</code> package to be loaded. Remind learners to use <code>using PumasUtilities</code> before using <code>metrics_table</code>. Most of the important metrics in this table can be retrieved individually with helper functions. The <code>loglikelihood</code> function deserves enhanced attention. It can be called on a model <code>fit</code> result and it will give the fitted model log-likelihood with constant. However, it is very flexible. The user can call it using the following positional arguments: model, <code>Population</code>, <code>NamedTuple</code> of the parameters values, and any estimation method (e.g. <code>FOCE()</code> or <code>LaplaceI()</code>). This is very helpful when the user is converting a model from another software like NONMEM. You can in one quick and easy <code>loglikelihood</code> function call check if you have a correct model conversion or equivalent data parsing procedures. Remind the users that for NONMEM comparisons, the user needs to multiply this value by <code>-2</code> and compare with NONMEM's \"OFV with constant\". Pumas does not drop the constant when reporting log-likelihood value. If any learner has doubts about AIC or BIC you can use the Wikipedia entries for AIC and BIC. For the <code>\u03b7shrinkage</code> and <code>\u03f5shrinkage</code> functions, highlight that they return a <code>NamedTuple</code> that the number of entries depend on the number of individual parameters or observations in the model, respectively. Finally, show the <code>goodness_of_fit</code> function that takes an <code>inspect</code> result as single position argument and generates a well-established common four-panel plot containing:</p> <ol> <li>observations versus population predictions</li> <li>observations versus individual predictions</li> <li>individual weighted residuals versus time</li> <li>individual weighted residuals versus individual predictions</li> </ol> <p>If the <code>inspect</code> result was called with the NPDE <code>nsim</code> keyword argument, then all individual weighted residuals are replaced by individual normalized prediction distribution errors. Don't forget to tell users that the <code>goodness_of_fit</code> functions depends on the <code>PumasUtilities</code> package being loaded by the user. You can assess visually the goodness of fit plot of the 1-comparment against the 2-compartment model and discuss with the learners which one they would choose.</p> <p>Finally, the last script <code>04-vpc.jl</code> deals on how to plot VPCs. Here you first generate the data quantiles using the <code>vpc</code> function. In Pumas, for models with continuous derived variables (including prediction corrected VPCs), the non-parametric quantile regression approach discussed in Jamsen et al. is used. This means that Pumas takes away binning from the user. Explain to the users that the quantile regression approach is more robust and less prone to human intervention. The <code>vpc_plot</code> function takes a result of the <code>vpc</code> as the single argument and outputs the VPC plot. There's an option to have prediction-corrected VPCs (pcVPCs) with the keyword argument <code>prediction_correction</code> set to <code>true</code> (it is <code>false</code> by default) in the <code>vpc</code> function. You can assess visually the VPC plot of the 1-comparment against the 2-compartment model and discuss with the learners which one they would choose.</p>"},{"location":"instructors/#get-in-touch","title":"Get in touch","text":"<p>If you have any suggestions or want to get in touch with our education team, please send an email to training@pumas.ai.</p>"},{"location":"instructors/#license","title":"License","text":"<p>This content is licensed under Creative Commons Attribution-ShareAlike 4.0 International.</p> <p></p>"},{"location":"reference/","title":"Reference Sheets for Pumas-AI NLME Model Assessment Workshop","text":""},{"location":"reference/#key-points","title":"Key Points","text":"<ul> <li>You can fit multiple models with a single <code>Population</code> by calling the <code>fit</code> function with different arguments</li> <li>The <code>inspect</code> function calculates in one go preds, ipreds, wres, ebes, icoefs, and dose control parameters, if applicable for any fitted Pumas model</li> <li>You can convert any output of an <code>inspect</code> into a NM-TRAN-formatted <code>DataFrame</code></li> <li>Everything that <code>inspect</code> computes can be individually computed using specific functions if necessary</li> </ul>"},{"location":"reference/#summary-of-basic-commands","title":"Summary of Basic Commands","text":"Action Command Observations Fit a Model using <code>FOCE()</code> <code>fit(model, population, initial_parameters, FOCE())</code> <code>initial_parameters</code> is a <code>NamedTuple</code> of parameter name and values Generate a <code>inspect</code> result <code>inspect(fit_result)</code> Calculates pred, ipred, wres, ebe, icoef, and dcp (if applicable), in one go Generate a <code>inspect</code> result with NPDE <code>inspect(fit_result; nsim=200)</code> Calculates pred, ipred, wres, ebe, icoef, dcp (if applicable), and NPDE with 200 times each subject is simulated in one go Convert an <code>inspect</code> result into a <code>DataFrame</code> <code>DataFrame(inspect_result)</code> The resulting <code>DataFrame</code> will be NM-TRAN-formatted and can be parsed as a <code>Population</code> Generate a <code>DataFrame</code> of pred and ipred <code>DataFrame(predict(fit_result))</code> NM-TRAN-formatted <code>DataFrame</code> Generate a <code>DataFrame</code> of wres <code>DataFrame(wresiduals(fit_result))</code> NM-TRAN-formatted <code>DataFrame</code> Generate a <code>DataFrame</code> of ebe <code>DataFrame(ebe(fit_result))</code> NM-TRAN-formatted <code>DataFrame</code> Generate a <code>DataFrame</code> of icoef <code>DataFrame(icoef(fit_result))</code> NM-TRAN-formatted <code>DataFrame</code> Generate a <code>DataFrame</code> of dcp <code>DataFrame(dosecontrol(fit_result))</code> NM-TRAN-formatted <code>DataFrame</code> Generate a <code>DataFrame</code> of pred and ipred with custom time profile <code>DataFrame(predict(fit_result; obstimes=interval))</code> NM-TRAN-formatted <code>DataFrame</code> and interval is a Julia interval (e.g. <code>1:10</code>) Generate a <code>DataFrame</code> of all metrics from a fitted model <code>metrics_table(fit_result)</code> Need to load <code>PumasUtilities</code> package Calculate the log-likelihood of a fitted model <code>loglikelihood(fit_result)</code> This value is with the constant Calculate the log-likelihood of any model given any population, parameter estimates, and estimation method <code>loglikelihood(model, population, parameter_estimates, estimation_method)</code> This value is with the constant. <code>parameter_estimates</code> is a <code>NamedTuple</code> of parameter estimates and <code>estimation_method</code> is a Pumas' estimation method (e.g. <code>FOCE()</code> or <code>LaplaceI()</code>) Plot goodness of fit <code>goodness_of_fit(inspect_result)</code> 4-panel plot with observations versus pred/ipred and wres versus time/ipred. If the <code>inspect_result</code> has NPDEs it will plot these instead of wres. Need to load <code>PumasUtilities</code> package Plot a visual predictive check <code>vpc_plot(vpc_result)</code> <code>vpc_result</code> is the result of <code>vpc(fit_result)</code>. Need to load <code>PumasUtilities</code> package Plot a prediction-corrected visual predictive check <code>vpc_plot(vpc_result)</code> <code>vpc_result</code> is the result of <code>vpc(fit_result; prediction_correction=true)</code>. Need to load <code>PumasUtilities</code> package"},{"location":"reference/#glossary","title":"Glossary","text":"pred <p>Population predictions, i.e. predictions using only the fixed effects and without random effects.</p> ipred <p>Individual predictions, i.e. predictions using the fixed effects and random effects.</p> wres <p>Individual Weighted residuals. They are the difference between observed data and the predicted data. In other words, it's a measure of the error in the prediction. But weighted by the precision of the observations, i.e. they are divided by the standard deviation of the observations.</p> ebe <p>Empirical Bayes estimates. They are commonly known as the individual parameters, or, also known as the \"etas\" (\u03b7).</p> icoef <p>Individual coefficients. They are calculated using the population coefficients and the individual parameters.</p> Dose control parameters (DCP) <p>Parameters that govern the dosage regimen of a drug, and the associated pharmacokinetic properties of the drug in the body. In Pumas models they are: lag of the dose, bioavability of the dose, rate of dosing, and duration of the dosing.</p> Individual normalized prediction distribution errors (NPDE) <p>Similar to the individual weighted residuals, but goes further by transforming the prediction error so that, under the correct model, should be standard normally distributed.</p> NM-TRAN <p>Official NONMEM dataset format. Check Pumas documentation on Data Representation for more information.</p> Log-likelihood <p>The log of the joint probability of the observed data viewed as a function of the parameters of a statistical model.</p> Akaike Information Criterion (AIC) <p>An estimator of prediction error and thereby relative quality of statistical models for a given set of data. It uses the model's log-likelihood and penalizes the model's by the number of parameters used. Models with higher log-likelihood values and less parameters are preferred.</p> Bayesian Information Criterion (BIC) <p>An estimator of prediction error and quality\u00a0of statistical models for a given set of data. It is similar to the AIC and also uses the log-likelihood.</p> Goodness of fit <p>How well a model can accurately predict or reproduce the observed data. In Pumas, there is a standard four-panel plot that plots established goodness of fit plots.</p> Visual predictive check (VPC) <p>Graphical model diagnostic tool to assess the performance of a pharmacometric model. It involves generating simulations from the model for the observed covariate values (generally time) and comparing these simulations to the observed data graphically.</p> Prediction-corrected visual predictive check (VPC) <p>Variant of the VPC that adjusts both observed and simulated data by the model predictions. This is done to remove the effects of potentially confounding factors.</p>"},{"location":"reference/#get-in-touch","title":"Get in touch","text":"<p>If you have any suggestions or want to get in touch with our education team, please send an email to training@pumas.ai.</p>"},{"location":"reference/#license","title":"License","text":"<p>This content is licensed under Creative Commons Attribution-ShareAlike 4.0 International.</p> <p></p>"},{"location":"waiver/","title":"Waiver of Liability for Pumas-AI NLME Model Assessment Workshop","text":"<p>By using the content provided by Pumas-AI, you agree to the following:</p> <ol> <li>You acknowledge that Pumas-AI has provided you with access to certain content (the \"Content\"),    including but not limited to software, documentation, images, videos, and other materials.</li> <li>You understand and agree that the Content is provided \"as is,\" without warranty of any kind,    either express or implied, including but not limited to the implied warranties of merchantability    and fitness for a particular purpose.</li> <li>You acknowledge that Pumas-AI is not responsible for how you use the Content,    and that Pumas-AI shall not be liable for any damages arising from your use of the Content,    including but not limited to direct, indirect, incidental, special, consequential, or punitive damages,    whether in an action of contract, negligence, or other tortious action,    even if Pumas-AI has been advised of the possibility of such damages.</li> <li>You agree to indemnify, defend, and hold harmless Pumas-AI, its officers, directors, employees, agents,    and affiliates from and against any and all claims, damages, losses, liabilities,    and expenses (including reasonable attorneys' fees) arising from your use of the Content.</li> <li>You acknowledge that this Waiver of Liability is a legally binding agreement between you and Pumas-AI,    and that it governs your use of the Content.    If you do not agree to the terms of this Waiver of Liability, you must immediately cease using the Content.</li> </ol>"},{"location":"waiver/#get-in-touch","title":"Get in touch","text":"<p>If you have any suggestions or want to get in touch with our education team, please send an email to training@pumas.ai.</p>"},{"location":"waiver/#license","title":"License","text":"<p>This content is licensed under Creative Commons Attribution-ShareAlike 4.0 International.</p> <p></p>"}]}